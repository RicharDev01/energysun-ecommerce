
/* +++++ BASE DE DATOS DE PROYECTO ENERGYSUN +++++ */
CREATE DATABASE ENERGYSUN_ECOMMERCE ;

USE ENERGYSUN_ECOMMERCE;

-- ++++++++++++++++++++++ #1 TABLA DE ROLES +++++++++++++++++++++++++++++

CREATE TABLE IF NOT EXISTS ROLES(
	ROL_CODIGO INT PRIMARY KEY AUTO_INCREMENT COMMENT 'CODIGO E IDENTIFICADOR UNICO DEL ROL',
	ROL_NOMBRE VARCHAR(100) NOT NULL COMMENT 'NOMBRE DEL ROL',
	ROL_FECHA_REGISTRO TIMESTAMP NULL DEFAULT( CURRENT_TIMESTAMP ) COMMENT 'GUARDAR EL DATO DE CREACION DEL ROL',
	ROL_FUM TIMESTAMP NULL DEFAULT( CURRENT_TIMESTAMP ) COMMENT 'GUARDAR LA FECHA DE LA ULTIMA MODIFICACION HECHA AL ROL',
	ROL_ESTADO VARCHAR(20) NOT NULL DEFAULT('ACTIVO') COMMENT 'ACTIVO; INACTIVO'
)ENGINE=INNODB;


-- ++++++++++++++++++++++ #2 TABLA DE USUARIOS +++++++++++++++++++++++++++++

CREATE TABLE IF NOT EXISTS USUARIOS(
	USU_CODIGO INT PRIMARY KEY AUTO_INCREMENT COMMENT 'CODIGO E IDENTIFICADOR UNICO DEL USUARIO',
	USU_ROL_ID INT NOT NULL COMMENT 'EL CODIGO DEL ROL AL QUE SE ASOCIA ESTE USUARIO FOREIGN KEY',
	USU_USERNAME VARCHAR(100) NOT NULL UNIQUE COMMENT 'NOMBRE DEL USUARIO UNICO',
	USU_EMAIL VARCHAR(200) NOT NULL UNIQUE COMMENT 'EMAIL DEL USUARIO UNICO',
	USU_CLAVE VARCHAR(100) NOT NULL COMMENT 'LA CLAVE ENCRIPTADA DEL USUARIO',
	USU_FECHA_REGISTRO TIMESTAMP NULL DEFAULT( CURRENT_TIMESTAMP ) COMMENT 'GUARDAR EL DATO DE CREACION DEL USUARIO',
	USU_FUM TIMESTAMP NULL DEFAULT( CURRENT_TIMESTAMP ) COMMENT 'GUARDAR LA FECHA DE LA ULTIMA MODIFICACION HECHA AL USUARIO',
	USU_ESTADO VARCHAR(20) NOT NULL DEFAULT('ACTIVO') COMMENT 'ACTIVO; INACTIVO',
	CONSTRAINT FK_USUARIO_ROL FOREIGN KEY(USU_ROL_ID) 
		REFERENCES ROLES(ROL_CODIGO)
)ENGINE=INNODB;


-- ++++++++++++++++++++++ #3 TABLA DE CATEGORIAS +++++++++++++++++++++++++++++

CREATE TABLE IF NOT EXISTS CATEGORIAS(
	CAT_CODIGO INT PRIMARY KEY AUTO_INCREMENT COMMENT 'CODIGO UNICO DE LA CATEGORIA',
	CAT_NOMBRE VARCHAR(100) NOT NULL COMMENT 'NOMBRE DE LA CATEGORIA',
	CAT_DESCRIPCION TEXT NULL COMMENT 'DESCRIPCION DE LA CATEGORIA',
	CAT_FECHA_REG TIMESTAMP NULL DEFAULT( CURRENT_TIMESTAMP ) COMMENT 'FRCHA EN QUE SE CREO DICHA CATEGORIA',
	CAT_FUM TIMESTAMP NULL DEFAULT( CURRENT_TIMESTAMP ) COMMENT 'FECHA DE LA ULTIMA MODIFICACION',
	CAT_ESTADO VARCHAR(20) NOT NULL DEFAULT('ACTIVO') COMMENT 'ACTIVO; INACTIVO'
)ENGINE=INNODB;


-- +++++++++++++++++++++++++++++++ #4 TABLA DE PRODUCTOS +++++++++++++++++++++++++++++++

CREATE TABLE IF NOT EXISTS PRODUCTOS(
	PROD_CODIGO INT PRIMARY KEY AUTO_INCREMENT COMMENT 'CODIGO UNICO DEL PRODUCTO',
	PROD_CATEGORIA_ID INT NOT NULL COMMENT 'ID DE REFERENCIA A LA TABLA CATEGORIA (FK)',
	PROD_NOMBRE VARCHAR(200) NOT NULL COMMENT 'NOMBRE DEL PRODUCTO (TITULO)' ,
	PROD_PRECIO DECIMAL(10, 2) NOT NULL COMMENT 'PRECIO CON DOS DECIMALES DEL PRODUCTO',
	PROD_EXTRACT VARCHAR(255) NOT NULL DEFAULT('SIN DESCRIPCION') COMMENT 'DESCRIPCION CORTA DEL PRODUCTO',
	PROD_DESCRIPCION TEXT NULL DEFAULT('SIN DESCRIPCION') COMMENT 'DESCRIPCION COMPLETA DEL PRODUCTO',
	PROD_IMAGEN_URL VARCHAR(255) NULL COMMENT 'STRING DE LA URL DE LA IMAGEN',
	PROD_STOCK INT NOT NULL COMMENT 'LA CANTIDAD DE INVENTARIO QUE SE ENCUENTRA DEL PRODUCTO',
	PROD_DESCUENTO DECIMAL(10, 2) NULL DEFAULT(0) COMMENT 'VALOR DEL DESCUENTO QUE TENDRÁ ESTE PRODUCTO',
	PROD_ESTADO VARCHAR(50) NOT NULL DEFAULT('DISPONIBLE') COMMENT 'DISPONIBLE; AGOTADO; INACTIVO',
	PROD_FECHA_REG TIMESTAMP NULL DEFAULT( CURRENT_TIMESTAMP ) COMMENT 'FECHA EN LA QUE SE REGESTRA EL PRODUCTO',
	PROD_FUM TIMESTAMP NULL DEFAULT( CURRENT_TIMESTAMP ) COMMENT 'FECHA DE LA ULTIMA MODIFICACION',
	CONSTRAINT FK_PRODUCTO_CATEGORIA FOREIGN KEY (PROD_CATEGORIA_ID) 
		REFERENCES CATEGORIAS(CAT_CODIGO) 
)ENGINE=INNODB;


-- +++++++++++++++++++++++++++++++ #5 TABLA DE CLIENTES +++++++++++++++++++++++++++++++

CREATE TABLE IF NOT EXISTS CLIENTES(
	CLI_CODIGO INT PRIMARY KEY AUTO_INCREMENT COMMENT 'CODIGO UNICO DEL CLIENTE',
	CLI_USUARIO_ID INT NOT NULL COMMENT 'CODIGO UNICO AL QUE SE LE HACE REFENCIA (FK)',
	CLI_FECHA_NAC DATE NOT NULL COMMENT 'LA FECHA DE NACIMENTO DEL CLIENTE',
	CLI_PRIMER_NOM VARCHAR(60) NOT NULL COMMENT 'NOMBRE 1 DEL CLIENTE, ESTE ES UN CAMPO OBLIGATORIO', 
	CLI_SEGUNDO_NOM VARCHAR(60) NULL COMMENT 'NOMBRE 2 DEL CLIENTE, ESTE ES UN CAMPO QUE PUEDE SER NULL, YA QUE HAY QUIENES SOLO TIENE UN NOMBRE',
	CLI_PRIMER_APE VARCHAR(60) NOT NULL COMMENT 'APELLIDO 1 DEL CLIENTE, ESTE ES UN CAMPO OBLIGATORIO',
	CLI_SEGUNDO_APE VARCHAR(60) NULL COMMENT 'APELLIDO 2 DEL CLIENTE, ESTE ES UN CAMPO QUE PUEDE SER NULL, YA QUE HAY QUIENES SOLO TIENE UN APELLIDO',
	CLI_TELEFONO VARCHAR(10) NULL COMMENT 'EL NUMERO DE CONTACTO DEL CLIENTE, PUEDE SER NULL, PERO NO RECOMENDADO',
	CLI_ESTADO VARCHAR(20) NOT NULL DEFAULT('ACTIVO') COMMENT 'ACTIVO; INACTIVO',
	CONSTRAINT FK_CLIENTE_USUARIO FOREIGN KEY(CLI_USUARIO_ID)
		REFERENCES USUARIOS(USU_CODIGO) ON DELETE CASCADE -- SI EL CLIENTO LO ELIMINO, QUE SE ELIMINE TAMBIEN EL USUARIO
)ENGINE=INNODB;


-- +++++++++++++++++++++++++++++++ #6 TABLA DE FACTURA +++++++++++++++++++++++++++++++

CREATE TABLE IF NOT EXISTS FACTURAS(
	FAC_CODIGO INT PRIMARY KEY AUTO_INCREMENT COMMENT 'EL NUMERO DE FACTURA, CODIGO UNICO',
	FAC_CODIGO_CLIENTE INT NOT NULL COMMENT 'EL ID DEL CLIENTE A LA CUAL HACE REFERENCIA (FK)',
	FAC_FECHA_EMISION TIMESTAMP NOT NULL COMMENT 'LA FECHA EN LA FACTURA HA SIDO EMITIDA',
	FAC_METODO_PAGO VARCHAR(50) NULL DEFAULT('Medio Electrónico') COMMENT 'LA FORMA DE PAGO CON LA QUE SE REALIZA LA TRANSACCION',
	CONSTRAINT FK_FACTURA_CLIENTE FOREIGN KEY (FAC_CODIGO_CLIENTE)
		REFERENCES clientes(CLI_CODIGO)

)ENGINE=INNODB;


-- +++++++++++++++++++++++++++++++ #7 TABLA DE DETALLE_FACTURA +++++++++++++++++++++++++++++++

CREATE TABLE IF NOT EXISTS DETALLE_FACTURA(
	DET_CODIGO INT PRIMARY KEY AUTO_INCREMENT COMMENT 'CODIGO AUTO GENERADO DEL DETALLE DE LA FACTURA',
	DET_CODIGO_FACTURA INT NOT NULL COMMENT 'ID DE REFERENCIA HACIA LA FACTURA (FK)',
	DET_CODIGO_PRODUCTO INT NOT NULL COMMENT 'ID DE REFERENCIAS HACIA EL PRODUCTO',
	DET_CANTIDAD INT NOT NULL COMMENT 'CANTIDAD DEL PRODUCTO COMPRADO',
	DET_IMPUESTO DECIMAL(10,2) NOT NULL COMMENT 'SON LOS IMPUESTOS AGREGADOS AL PRECIO DEL PRODUCTO, EN NUESTRO CASO EL IVA (%)',
	DET_DESCUENTOS DECIMAL(10,2) NULL COMMENT 'CANTIDAD DE DESCUENTO REALIZADO AL PRODUCTO O PRODUCTOS (%)',
	DET_TOTAL DECIMAL(10,2) NOT NULL COMMENT 'EL TOTAL DE LA COMPRA REALIZADA, DESPUES DE IMPUESTOS Y DESCUENTOS',
	CONSTRAINT FK_DETALLE_FACTURA FOREIGN KEY(DET_CODIGO_FACTURA)
		REFERENCES FACTURAS(FAC_CODIGO),
	CONSTRAINT FK_DETALLE_PRODUCTO FOREIGN KEY(DET_CODIGO_PRODUCTO)
		REFERENCES productos(PROD_CODIGO)
	
)ENGINE=INNODB;

-- +++++++++++++++++++++++++++++++ #8 TABLA DE ENVIOS +++++++++++++++++++++++++++++++

CREATE TABLE IF NOT EXISTS ENVIOS(
	ENV_CODIGO INT PRIMARY KEY AUTO_INCREMENT COMMENT 'CODIGO DE ENVIO UNICO',
	ENV_CODIGO_CLIENTE INT NOT NULL COMMENT 'CODIGO DEL CLIENTE AL QUE LE PERTENECE EL ENVIO',
	ENV_MUNICIPIO VARCHAR(100) NOT NULL COMMENT 'EL MUNICIPIO DE EL DEPARTAMENTO DE SAN SALVADOR',
	ENV_DIRECCION VARCHAR(255) NOT NULL COMMENT 'LA DIRECCION A LA QUE EL CLIENTE SOLICITE EL ENVIO',
	ENV_COMENTARIO VARCHAR(255) NULL DEFAULT('SIN COMENTARIOS') COMMENT 'LA DIRECCION A LA QUE EL CLIENTE SOLICITE EL ENVIO',
	ENV_ESTADO VARCHAR(50) NOT NULL DEFAULT('PENDIENTE') COMMENT 'PENDIENTE; EN RUTA; ENTREGADO; CANCELADO',
	ENV_FECHA_ENVIO TIMESTAMP NOT NULL DEFAULT( CURRENT_TIMESTAMP ) COMMENT 'FECHA EN LA QUE EL ENVIO SE HA GENERADO',
	CONSTRAINT FK_ENVIO_CLIENTE FOREIGN KEY(ENV_CODIGO_CLIENTE)
		REFERENCES clientes(CLI_CODIGO)
)ENGINE=INNODB;


-- +++++++++++++++++++++++++++++++ #9 TABLA DE VISITAS +++++++++++++++++++++++++++++++

CREATE TABLE IF NOT EXISTS VISITAS(
	VIS_CODIGO INT PRIMARY KEY AUTO_INCREMENT COMMENT 'CODIGO UNICO DE LA VISITA',
	VIS_CODIGO_CLIENTE INT NOT NULL COMMENT 'EL ID DEL CLIENTE EL CUAL AGENDA LA VISITA',
	VIS_CODIGO_USUARIO INT COMMENT 'EL ID DEL USUARIO CON ROL DE VISITADOR, QUIEN ES EL ASIGNADO A REALIZAR LA VISITA',
	VIS_FECHA DATE NOT NULL COMMENT 'LA FECHA EN LA QUE EL CLIENTE SOLICITA UNA VISITA',
	VIS_HORA TIME NOT NULL COMMENT 'LA HORA QUE EL CLIENTE SOLICITA SE HAGA LA VISITA',
	VIS_DIRECCION VARCHAR(255) NOT NULL COMMENT 'LA DIRECCION QUE EL USUARIO QUIERE QUE SE LE HAGA LA VISITA TECNICA',
	VIS_ESTADO VARCHAR(50) NOT NULL DEFAULT('PENDIENTE ASIGNAR') COMMENT 'PENDIENTE ASIGNAR; EN RUTA; FINALIZADA; CANCELADA',
	VIS_FECHA_REGISTRO TIMESTAMP NOT NULL DEFAULT( CURRENT_TIMESTAMP ) COMMENT 'ESTA FECHA ES CUANDO EL USUARIO HACE LA CITA, MOMENTO ACTUAL',
	CONSTRAINT FK_VISITA_CLIENTE FOREIGN KEY(VIS_CODIGO_CLIENTE)
		REFERENCES clientes(CLI_CODIGO),
	CONSTRAINT FK_VISITA_USUARIO FOREIGN KEY(VIS_CODIGO_USUARIO)
		REFERENCES usuarios(USU_CODIGO)
)ENGINE=INNODB;


-- +++++++++++++++++++++++++++++++ #10 TABLA DE EVALUACIONES +++++++++++++++++++++++++++++++

CREATE TABLE IF NOT EXISTS EVALUACIONES(
	EVA_CODIGO INT PRIMARY KEY AUTO_INCREMENT COMMENT 'CODIGO UNICO DE LA EVALUACION',
	EVA_CODIGO_USUARIO INT NOT NULL COMMENT 'CODIGO DEL USUARIO CON ROL DE VISITADOR ASIGNADO',
	EVA_CODIGO_CLIENTE INT NOT NULL COMMENT 'CODIGO DEL CLIENTE AL CUAL SE LE HARA LA VISITA',
	EVA_RESULTADO TEXT NOT NULL COMMENT 'LOS COMENTARIOS DEL TECNICO SOBRE LA EVALUACION (EL RESULTADO)',
	EVA_ESTADO VARCHAR(50) NOT NULL DEFAULT('PENDIENTE') COMMENT 'PENDIENTE; EN EVALUACION; FINALIZADA; APROBADA',
	EVA_FECHA_RESULTADO TIMESTAMP NOT NULL COMMENT 'LA FECHA EN LA QUE SE REALIZA EL RESULTADO',
	CONSTRAINT FK_EVALUACION_USUARIO FOREIGN KEY(EVA_CODIGO_USUARIO)
		REFERENCES usuarios(USU_CODIGO),
	CONSTRAINT FK_EVALUACION_CLIENTE FOREIGN KEY(EVA_CODIGO_CLIENTE)
		REFERENCES clientes(CLI_CODIGO)
)ENGINE=INNODB;


-- ++++++++++++++++++++++++++++++ PROCESOS ALMACENADOS; TRIGGER Y VISTAS ++++++++++++++++++++++++

--  ++++ PROCEDIMIENTO QUE HACE LA INSERCION DE USUARIO - CLIENTE ++++++
DELIMITER $$
CREATE PROCEDURE IF NOT EXISTS SP_REGISTRO_CLIENTE(
        IN U_ROL_ID INT,
        IN U_USERNAME VARCHAR(100),
        IN U_EMAIL VARCHAR(200),
        IN U_CLAVE VARCHAR(100),
        IN C_FECHA_NAC DATE,
        IN C_PRIMER_NOMBRE VARCHAR(60),
        IN C_SEGUNDO_NOMBRE VARCHAR(60),
        IN C_PRIMER_APELLIDO VARCHAR(60),
        IN C_SEGUNDO_APELLIDO VARCHAR(60),
        IN C_TELEFONO VARCHAR(10)
)
BEGIN
    DECLARE ID_USUARIO INT UNSIGNED;
    -- INSERSION DE USUARIO
    INSERT INTO USUARIOS(USU_ROL_ID, USU_USERNAME, USU_EMAIL, USU_CLAVE)
        VALUES(
               U_ROL_ID,
               U_USERNAME,
               U_EMAIL,
               U_CLAVE );

    -- UNA VEZ INSERTADO, TOMO EL ID RECIEN CREADO PARA ASOCIARLO A LA TABLA CLIENTES
    SET ID_USUARIO = LAST_INSERT_ID();

    -- INSERSION DE LA TABLA CLIENTES
    INSERT INTO CLIENTES(CLI_USUARIO_ID, CLI_FECHA_NAC, CLI_PRIMER_NOM, CLI_SEGUNDO_NOM, CLI_PRIMER_APE, CLI_SEGUNDO_APE, CLI_TELEFONO)
        VALUES( ID_USUARIO,
               C_FECHA_NAC,
               C_PRIMER_NOMBRE,
               C_SEGUNDO_NOMBRE,
               C_PRIMER_APELLIDO,
               C_SEGUNDO_APELLIDO,
               C_TELEFONO );
END $$

DELIMITER ;



-- ++++++++ VISTA DE DATOS DE CLIENTE ++++++++++++
CREATE VIEW VW_DATOS_CLIENTES AS
SELECT
    C.CLI_CODIGO AS CODIGO,
    U.USU_USERNAME AS USERNAME,
    U.USU_EMAIL AS EMAIL,
    R.ROL_NOMBRE AS ROL,
    C.CLI_PRIMER_NOM AS PRIMER_NOM,
    C.CLI_SEGUNDO_NOM AS SEGUNDO_NOM,
    C.CLI_PRIMER_APE AS PRIMER_APE,
    C.CLI_SEGUNDO_APE AS SEGUNDO_APE,
    C.CLI_FECHA_NAC AS FECHA_NACIMIENTO,
    C.CLI_TELEFONO AS TELEFONO,
    C.CLI_ESTADO AS ESTADO
FROM CLIENTES C
INNER JOIN USUARIOS U
    ON U.USU_CODIGO = C.CLI_USUARIO_ID
INNER JOIN ROLES R
    ON R.ROL_CODIGO = U.USU_ROL_ID;


-- +++++ TRIGGER DE ACTUALIZACION DEL STOCK ++++++
DELIMITER $$
CREATE TRIGGER IF NOT EXISTS TRG_ACTUALIZAR_STOCK
  AFTER INSERT ON DETALLE_FACTURA
  FOR EACH ROW

  BEGIN

    DECLARE cantidad_vendida INT;
    DECLARE stock_actual INT;
    DECLARE nuevo_stock INT;

    -- Obtengo la cantidad vendida del registro nuevo
    SET cantidad_vendida = NEW.DET_CANTIDAD;

    -- Obtén el stock actual del producto relacionado con el detalle de la factura
    SELECT PROD_STOCK INTO stock_actual
    FROM PRODUCTOS
    WHERE PROD_CODIGO = NEW.DET_CODIGO_PRODUCTO;

    -- Calcula el nuevo stock
    SET nuevo_stock = stock_actual - cantidad_vendida;

    UPDATE PRODUCTOS
    SET PROD_STOCK = nuevo_stock
    WHERE PROD_CODIGO = NEW.DET_CODIGO_PRODUCTO;

  END; $$

DELIMITER ;














